/*
 *  Puzzle-GIS - OpenSource mapping program
 *  http://docs.codehaus.org/display/PUZZLEGIS
 *  Copyright (C) 2007-2008 Puzzle-GIS
 *  
 *  GPLv3 + Classpath exception
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.puzzle.core.actions;

import java.util.Collection;
import java.util.Map;

import org.openide.util.Lookup;

import org.puzzle.core.project.source.capabilities.DistantSourceCreation;
import org.puzzle.core.project.source.GISSourceInfo;
import org.puzzle.core.project.source.GISSourceService;
import org.puzzle.core.project.source.capabilities.SourceCreationPane;

/**
 * Distant generic chooser. This will call all GISDistantSourceService
 * 
 * @author  Johann Sorel (Puzzle-GIS)
 */
final class JDistantSourcePane extends javax.swing.JPanel {
    
    private final Collection<? extends GISSourceService> services;
    
    
    JDistantSourcePane() {
        initComponents();

        services = Lookup.getDefault().lookupAll(GISSourceService.class);

        for (final GISSourceService service : services) {

            DistantSourceCreation distant = service.getLookup().lookup(DistantSourceCreation.class);

            if (distant != null) {
                final SourceCreationPane panel = distant.createPanel();
                guiTabPane.add(service.getTitle(), panel);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guiTabPane = new javax.swing.JTabbedPane();

        guiTabPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(guiTabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(guiTabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane guiTabPane;
    // End of variables declaration//GEN-END:variables

    /**
     * Returns a map of name > GISSourceInfo to create GISSources.
     */
    final Map<String,GISSourceInfo> getSources(){
        final SourceCreationPane panel = (SourceCreationPane) guiTabPane.getSelectedComponent();
        return panel.createSources();
    }
    
}
