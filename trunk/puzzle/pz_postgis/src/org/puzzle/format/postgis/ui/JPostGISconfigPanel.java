/*
 *    Puzzle GIS - Desktop GIS Platform
 *    http://puzzle-gis.codehaus.org
 *
 *    (C) 2007-2009, Johann Sorel
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 3 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.puzzle.format.postgis.ui;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;
import static org.geotoolkit.jdbc.JDBCDataStoreFactory.*;
/**
 * @author Johann Sorel (PÃ¼zzle-GIS)
 */
public class JPostGISconfigPanel extends javax.swing.JPanel {

    public JPostGISconfigPanel() {
        initComponents();

        final Map<String,Serializable> params = new HashMap<String, Serializable>();
        params.put(DBTYPE.getName().toString(), "postgisng");
        params.put(HOST.getName().toString(), "localhost");
        params.put(PORT.getName().toString(), 5432);
        params.put(SCHEMA.getName().toString(), "public");
        params.put(DATABASE.getName().toString(), "");
        params.put(USER.getName().toString(), "");
        params.put(PASSWD.getName().toString(), "");

        setParams(params);
    }

    public void setParams(Map map) {

        if(map == null){
            throw new NullPointerException();
        }

        Object val = null;

        val = map.get(HOST.getName().toString());
        jtf_host.setText( (val == null) ? "" : val.toString());
        val = map.get(PORT.getName().toString());
        jtf_port.setText((val == null) ? "" : val.toString());
        val = map.get(SCHEMA.getName().toString());
        jtf_schema.setText((val == null) ? "" : val.toString());
        val = map.get(DATABASE.getName().toString());
        jtf_database.setText((val == null) ? "" : val.toString());
        val = map.get(USER.getName().toString());
        jtf_user.setText((val == null) ? "" : val.toString());
        val = map.get(PASSWD.getName().toString());
        jtf_password.setText((val == null) ? "" : val.toString());
        val = map.get(MAXCONN.getName().toString());
    }

    public Map<String,Serializable> getParams(){
        final Map<String,Serializable> params = new HashMap<String,Serializable>();
        params.put(DBTYPE.getName().toString(), "postgisng");
        params.put(HOST.getName().toString(), jtf_host.getText());
        params.put(PORT.getName().toString(), jtf_port.getText());
        params.put(SCHEMA.getName().toString(), jtf_schema.getText());
        params.put(DATABASE.getName().toString(), jtf_database.getText());
        params.put(USER.getName().toString(), jtf_user.getText());
        params.put(PASSWD.getName().toString(), new String(jtf_password.getPassword()));
        return params;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jLabel1 = new javax.swing.JLabel();
        jtf_host = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtf_port = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtf_schema = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtf_database = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtf_user = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtf_password = new javax.swing.JPasswordField();

        jXTitledPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jXTitledPanel1.setTitle(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jXTitledPanel1.title")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jLabel5.text")); // NOI18N

        jLabel6.setText(org.openide.util.NbBundle.getBundle(JPostGISconfigPanel.class).getString("JPostGISconfigPanel.jLabel6.text")); // NOI18N

        javax.swing.GroupLayout jXTitledPanel1Layout = new javax.swing.GroupLayout(jXTitledPanel1);
        jXTitledPanel1.setLayout(jXTitledPanel1Layout);
        jXTitledPanel1Layout.setHorizontalGroup(
            jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_host, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                    .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_port, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                    .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_schema, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                    .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_database, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                    .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_user, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE))
                    .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtf_password, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jXTitledPanel1Layout.setVerticalGroup(
            jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtf_host, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtf_schema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtf_database, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtf_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtf_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXTitledPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jXTitledPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private javax.swing.JTextField jtf_database;
    private javax.swing.JTextField jtf_host;
    private javax.swing.JPasswordField jtf_password;
    private javax.swing.JTextField jtf_port;
    private javax.swing.JTextField jtf_schema;
    private javax.swing.JTextField jtf_user;
    // End of variables declaration//GEN-END:variables

}
