/*
 *    Puzzle GIS - Desktop GIS Platform
 *    http://puzzle-gis.codehaus.org
 *
 *    (C) 2007-2009, Johann Sorel
 *
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation;
 *    version 3 of the License.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 */
package org.puzzle.format.postgis.service;

import java.awt.BorderLayout;
import java.io.IOException;
import org.geotools.data.DataStore;
import org.geotools.data.DataStoreFinder;
import org.geotools.data.DefaultTransaction;
import org.geotools.data.FeatureSource;
import org.geotools.data.FeatureStore;
import org.opengis.feature.simple.SimpleFeature;
import org.opengis.feature.simple.SimpleFeatureType;
import org.puzzle.core.project.source.capabilities.JExportPane;
import org.puzzle.format.postgis.ui.JPostGISconfigPanel;

/**
 * @author Johann Sorel (Puzzle-GIS)
 */
public class JPostGisExportPane extends JExportPane {

    private final JPostGISconfigPanel guiConfig = new JPostGISconfigPanel();

    /** Creates new form JShapeExportPane */
    public JPostGisExportPane() {
        initComponents();

        add(BorderLayout.CENTER,guiConfig);
    }

    private DataStore getDataStore() throws IOException{
        return DataStoreFinder.getDataStore(guiConfig.getParams());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void recordSource(FeatureSource<SimpleFeatureType,SimpleFeature> source) throws IOException {

        DataStore myData = getDataStore();

        // Create the Shapefile (empty at this point)
        myData.createSchema(source.getSchema());

        FeatureSource<SimpleFeatureType,SimpleFeature> featureTarget = myData.getFeatureSource(source.getName());

        if (featureTarget instanceof FeatureStore) {
            FeatureStore<SimpleFeatureType, SimpleFeature> store = (FeatureStore<SimpleFeatureType, SimpleFeature>) featureTarget;

            DefaultTransaction transaction = new DefaultTransaction();
            store.setTransaction(transaction);

            try {
                store.addFeatures(source.getFeatures());
                transaction.commit();
            } catch (IOException ex) {
                try {
                    store.getTransaction().rollback();
                } catch (IOException e) {
                    throw e;
                }
                throw ex;
            } finally {
                transaction.close();
            }
            
        } else {
            throw new IOException("You don't have permission to write in this DataStore.");
        }

        myData.dispose();
    }
}
