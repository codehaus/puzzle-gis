/*
 *  Puzzle-GIS - OpenSource mapping program
 *  http://docs.codehaus.org/display/PUZZLEGIS
 *  Copyright (C) 2007 Puzzle-GIS
 *  
 *  GPLv3 + Classpath exception
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.puzzle.puzzleprint.jasper;

import java.awt.GridLayout;
import java.io.File;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author johann sorel
 */
public class ReportDialog extends javax.swing.JDialog {

    private final JReportList guiReport = new JReportList();

    /** Creates new form ReportDialog */
    public ReportDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);



        initComponents();

        panel_reports.setLayout(new GridLayout(1, 1));
        panel_reports.add(guiReport);

//        final JRParameterTable paramTable = new JRParameterTable();
//        paramTable.setReport(jasperReport);
//
//        final JRFieldTable fieldTable = new JRFieldTable();
//        fieldTable.setReport(jasperReport);
        guiReport.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                int index = e.getFirstIndex();

                Object obj = guiReport.getModel().getElementAt(index);
                if (obj instanceof JasperReport) {
                    guiParamTable.setReport((JasperReport) obj);
                    guiFieldTable.setReport((JasperReport) obj);
                }
            }
            });



    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_reports = new javax.swing.JPanel();
        guiFieldTable = new org.puzzle.puzzleprint.jasper.JRFieldTable();
        guiParamTable = new org.puzzle.puzzleprint.jasper.JRParameterTable();
        butImport = new javax.swing.JButton();
        butGenerate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel_reports.setBorder(javax.swing.BorderFactory.createTitledBorder("Reports"));
        panel_reports.setPreferredSize(new java.awt.Dimension(200, 100));

        org.jdesktop.layout.GroupLayout panel_reportsLayout = new org.jdesktop.layout.GroupLayout(panel_reports);
        panel_reports.setLayout(panel_reportsLayout);
        panel_reportsLayout.setHorizontalGroup(
            panel_reportsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 190, Short.MAX_VALUE)
        );
        panel_reportsLayout.setVerticalGroup(
            panel_reportsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 281, Short.MAX_VALUE)
        );

        guiFieldTable.setBorder(javax.swing.BorderFactory.createTitledBorder("Fields"));

        guiParamTable.setBorder(javax.swing.BorderFactory.createTitledBorder("Parameters"));

        butImport.setText(org.openide.util.NbBundle.getMessage(ReportDialog.class, "ReportDialog.butImport.text")); // NOI18N
        butImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butImportActionPerformed(evt);
            }
        });

        butGenerate.setText(org.openide.util.NbBundle.getMessage(ReportDialog.class, "ReportDialog.butGenerate.text")); // NOI18N
        butGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGenerateActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 447, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(panel_reports, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(guiFieldTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                            .add(guiParamTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(butImport)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 193, Short.MAX_VALUE)
                        .add(butGenerate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 359, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(panel_reports, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(guiParamTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(guiFieldTable, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(butImport)
                    .add(butGenerate))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void butImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butImportActionPerformed

        JFileChooser jfc = new JFileChooser();
        int val = jfc.showOpenDialog(null);

        if (val == JFileChooser.APPROVE_OPTION) {

            File f = jfc.getSelectedFile();


//            ClassLoader loader = (ClassLoader) Lookup.getDefault().lookup(ClassLoader.class);
//            loader.loadClass(name);

//            try {
//                ClassLoader l = Thread.currentThread().getContextClassLoader();
//                l.loadClass("net.sf.jasperreports.engine.fill.JRFillVariable");
//                l.loadClass("net.sf.jasperreports.engine.JRDataSource");
//                l.loadClass("net.sf.jasperreports.engine.JasperCompileManager");
//                l.loadClass("net.sf.jasperreports.engine.JasperFillManager");
//                l.loadClass("net.sf.jasperreports.engine.JasperPrint");
//                l.loadClass("net.sf.jasperreports.engine.JasperReport");
//                l.loadClass("net.sf.jasperreports.engine.design.JasperDesign");
//                l.loadClass("net.sf.jasperreports.engine.xml.JRXmlLoader");
//                l.loadClass("net.sf.jasperreports.view.JasperViewer");
//                l.loadClass("org.eclipse.jdt.internal.compiler.ICompilerRequestor");
//            } catch (ClassNotFoundException ex) {
//                ex.printStackTrace();
//            }


            try {
                JasperDesign jasperDesign = JRXmlLoader.load(f);
                
                
                
                ClassLoader l = Thread.currentThread().getContextClassLoader();
                l.loadClass("net.sf.jasperreports.engine.JasperCompileManager");
//                Method m = JasperCompileManager.class.getMethod("compileReport", JasperDesign.class);
//                JasperReport jasperReport = (JasperReport) m.invoke(JasperCompileManager.class, jasperDesign);
                
                
                JasperReport jasperReport = net.sf.jasperreports.engine.JasperCompileManager.compileReport(jasperDesign);

                guiReport.addReport(jasperReport);
            } catch (Exception e) {
                e.printStackTrace();
            }

        }


//        try {
//            
//            File reportFile = new File(ReportDialog.class.getResource("/org/puzzle/puzzleprint/jasper/myTemplate.jrxml").toURI());
//            
//            JasperDesign jasperDesign = JRXmlLoader.load(reportFile);
//            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
//            
//            guiReport.addReport(jasperReport);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

//        try {
//            File reportFile = new File(ReportFrame.class.getResource("/org/puzzle/puzzleprint/jasper/Default Template.jrxml").toURI());
//            
//            JasperDesign jasperDesign = JRXmlLoader.load(reportFile);
//            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
//            
//            guiReport.addReport(jasperReport);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
    }//GEN-LAST:event_butImportActionPerformed

    private void butGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGenerateActionPerformed
        Map parameters = guiParamTable.getReportParameters();
        JRDataSource source = guiFieldTable.getReportDataSource();
        JasperReport jasperReport = (JasperReport) guiReport.getModel().getElementAt(guiReport.getSelectedIndex());
        try {
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, source);
            JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_butGenerateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ReportDialog dialog = new ReportDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butGenerate;
    private javax.swing.JButton butImport;
    private org.puzzle.puzzleprint.jasper.JRFieldTable guiFieldTable;
    private org.puzzle.puzzleprint.jasper.JRParameterTable guiParamTable;
    private javax.swing.JPanel panel_reports;
    // End of variables declaration//GEN-END:variables
}
