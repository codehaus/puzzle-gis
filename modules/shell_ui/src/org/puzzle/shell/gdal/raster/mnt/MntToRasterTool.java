/*
 *  Puzzle-GIS - OpenSource mapping program
 *  http://docs.codehaus.org/display/PUZZLEGIS
 *  Copyright (C) 2007-2008 Puzzle-GIS
 *  
 *  GPLv3 + Classpath exception
 *  
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.puzzle.shell.gdal.raster.mnt;

import java.io.File;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.geotools.gui.swing.misc.filter.FileFilterFactory;
import org.geotools.gui.swing.misc.filter.FileFilterFactory.FORMAT;
import org.puzzle.shell.gdal.ENV;
import org.puzzle.shell.gdal.GDALTool;
import org.puzzle.shell.misc.runtime.ProcessObject;

/**
 * panneau de conversion MNT ESRI ASCII GRID 
 * @author johann sorel
 */
public class MntToRasterTool extends javax.swing.JPanel implements GDALTool {

    String repertoire = "";

    /** Creates new form MNTConvertionUnFichier */
    public MntToRasterTool() {
        initComponents();
    }

    private void mr_testName() {
        String nom_sortie = mr_jtf_sortie.getText();
        String nom_entree = mr_jtf_entree.getText();
        String extension_fichier = "";
        String extension_liste = "";
        String nouveaunom = "";
        int index = -1;

        //recuperation de l'extension dans la liste
        int num = mr_format.getSelectedIndex();
        switch (num) {
            case 0:
                extension_liste = ".img";
                break;
            case 1:
                extension_liste = ".ecw";
                break;
            case 2:
                extension_liste = ".jpg";
                break;
            case 3:
                extension_liste = ".j2k";
                break;
            case 4:
                extension_liste = ".jp2";
                break;
            case 5:
                extension_liste = ".png";
                break;
            case 6:
                extension_liste = ".tif";
                break;
        }

        //si le texte en sortie est vide on le complete avec celui d'entree
        if (nom_sortie.length() == 0) {
            nom_sortie = nom_entree;
        }

        //recuperation de l'extension du fichier en sortie
        index = nom_sortie.lastIndexOf(".");
        if (index != -1) {
            extension_fichier = nom_sortie.substring(index, nom_sortie.length());
        }


        // on corrige l'extension
        if (!nom_sortie.endsWith(extension_liste)) {

            if (nom_sortie.endsWith(File.separator)) {
                nom_sortie += "sortie";
            }

            if (!nom_sortie.equals("")) {
                if (index == -1) {

                    nouveaunom = nom_sortie + extension_liste;
                } else {
                    nouveaunom = nom_sortie.substring(0, index) + extension_liste;
                }
            }

        } else {
            nouveaunom = nom_sortie;
        }

        mr_jtf_sortie.setText(nouveaunom);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        mr_chercher_entree = new javax.swing.JButton();
        mr_jtf_sortie = new javax.swing.JTextField();
        mr_jtf_entree = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mr_format = new javax.swing.JComboBox();
        mr_chercher_sortie = new javax.swing.JButton();
        jXTitledSeparator1 = new org.jdesktop.swingx.JXTitledSeparator();

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(MntToRasterTool.class, "files"))); // NOI18N

        mr_chercher_entree.setText(org.openide.util.NbBundle.getMessage(MntToRasterTool.class, "...")); // NOI18N
        mr_chercher_entree.setPreferredSize(new java.awt.Dimension(45, 20));
        mr_chercher_entree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mr_rechercher_entree(evt);
            }
        });

        mr_jtf_sortie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mr_sortie_valid(evt);
            }
        });
        mr_jtf_sortie.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mr_sortielost(evt);
            }
        });

        jLabel4.setText(org.openide.util.NbBundle.getMessage(MntToRasterTool.class, "output")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(MntToRasterTool.class, "input")); // NOI18N

        mr_format.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ERDAS IMAGE (.img)", "ERMapper Compressed Wavelets (.ecw)", "Joint Photograhic Experts Group (.jpg)", "JPEG2000 Kakadu (.j2k)", "JPEG2000 ERMapper (.jp2)", "Portable Network Graphics (.png)", "GEOTIF (.tif)" }));
        mr_format.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mr_format(evt);
            }
        });

        mr_chercher_sortie.setText(org.openide.util.NbBundle.getMessage(MntToRasterTool.class, "...")); // NOI18N
        mr_chercher_sortie.setPreferredSize(new java.awt.Dimension(45, 20));
        mr_chercher_sortie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mr_rechercher_sortie(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(mr_jtf_sortie, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mr_chercher_sortie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                        .addGap(4, 4, 4)
                        .addComponent(mr_format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(mr_jtf_entree, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mr_chercher_entree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mr_chercher_entree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mr_jtf_entree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mr_format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mr_jtf_sortie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mr_chercher_sortie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXTitledSeparator1.setTitle(org.openide.util.NbBundle.getMessage(MntToRasterTool.class, "mnttoraster")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jXTitledSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jXTitledSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mr_sortielost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mr_sortielost
        mr_testName();
    }//GEN-LAST:event_mr_sortielost

    private void mr_sortie_valid(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mr_sortie_valid
        mr_testName();
    }//GEN-LAST:event_mr_sortie_valid

    private void mr_format(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mr_format
        mr_testName();
    }//GEN-LAST:event_mr_format

    private void mr_rechercher_sortie(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mr_rechercher_sortie

        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.ERMAPPER_COMPRESSED_WAVELETS));
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.ERDAS_IMAGE));
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.JOINT_PHOTOGRAPHIC_EXPERTS_GROUP));
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.JPEG_2000));
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.PORTABLE_NETWORK_GRAPHICS));
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.TIFF));

        jfc.setFileFilter(jfc.getChoosableFileFilters()[1]);

        jfc.setCurrentDirectory(ENV.getPath());

        int val = jfc.showSaveDialog(this);

        if (val == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            mr_jtf_sortie.setText(f.getPath());
            mr_testName();
            ENV.updatePath(f.getAbsoluteFile());
        }
    }//GEN-LAST:event_mr_rechercher_sortie

    private void mr_rechercher_entree(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mr_rechercher_entree

        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(FileFilterFactory.createFileFilter(FORMAT.ESRI_ASCII_GRID));

        jfc.setFileFilter(jfc.getChoosableFileFilters()[1]);

        jfc.setCurrentDirectory(ENV.getPath());

        int val = jfc.showOpenDialog(this);

        if (val == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            mr_jtf_entree.setText(f.getPath());
            mr_testName();
            ENV.updatePath(f.getAbsoluteFile());
        }

    }//GEN-LAST:event_mr_rechercher_entree
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel4;
    private org.jdesktop.swingx.JXTitledSeparator jXTitledSeparator1;
    private javax.swing.JButton mr_chercher_entree;
    private javax.swing.JButton mr_chercher_sortie;
    private javax.swing.JComboBox mr_format;
    private javax.swing.JTextField mr_jtf_entree;
    private javax.swing.JTextField mr_jtf_sortie;
    // End of variables declaration//GEN-END:variables

    public JComponent getComponent() {
        return this;
    }

    public ProcessObject[] createProcesses() {
        if (mr_jtf_entree.getText().equals("") || mr_jtf_sortie.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs", "Donnees manquantes", JOptionPane.ERROR_MESSAGE);
            return EMPTY_PROCESS_OBJECT_ARRAY;
        } else {

            String format_sortie = "";
            switch (mr_format.getSelectedIndex()) {
                case 0:
                    format_sortie = "HFA";
                    break;
                case 1:
                    format_sortie = "ECW";
                    break;
                case 2:
                    format_sortie = "JPEG";
                    break;
                case 3:
                    format_sortie = "JP2KAK";
                    break;
                case 4:
                    format_sortie = "JP2ECW";
                    break;
                case 5:
                    format_sortie = "PNG";
                    break;
                case 6:
                    format_sortie = "GTiff";
                    break;
            }


            String[] parametres = new String[7];
            parametres[0] = ENV.getGDAL_TRANSLATEPath();
            parametres[1] = "-of";
            parametres[2] = format_sortie;
            parametres[3] = "-b";
            parametres[4] = "1";
            parametres[5] = mr_jtf_entree.getText();
            parametres[6] = mr_jtf_sortie.getText();
            String separateur = File.separator;
            int i = mr_jtf_sortie.getText().lastIndexOf(separateur);

            repertoire = mr_jtf_sortie.getText().substring(0, i - 1);
            String nom = mr_jtf_sortie.getText().substring(i + 1, mr_jtf_sortie.getText().length());


            ProcessObject po = new ProcessObject(parametres, nom);

            return new ProcessObject[]{po};
        }
    }
}
